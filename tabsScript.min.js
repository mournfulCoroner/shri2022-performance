function selectTab(a, g, c) { let b = a.querySelector(`.section__tab[data-id=${c}]`), e = a.querySelector(`.section__panel[data-id=${c}]`), d = a.querySelector(".section__tab_active"), f = a.querySelector(".section__panel:not(.section__panel_hidden)"); d.classList.remove("section__tab_active"), d.setAttribute("aria-selected", "false"), d.removeAttribute("tabindex"), b.classList.add("section__tab_active"), b.setAttribute("aria-selected", "true"), b.setAttribute("tabindex", "0"), b.focus({ preventScroll: !0 }), f.classList.add("section__panel_hidden"), f.setAttribute("aria-hidden", "true"), e.classList.remove("section__panel_hidden"), e.setAttribute("aria-hidden", "false"), g.value = c } function makeTabs() { let a = document.querySelector(".main__devices"), e = a.querySelector(".section__tab_active").dataset.id, b = a.querySelectorAll(".section__tab"), f = Array.from(b).map(a => a.dataset.id), d = a.querySelector(".section__select"); for (let c of (d.addEventListener("input", () => { selectTab(a, d, d.value) }), b)) c.addEventListener("click", b => { let c = b.target.dataset.id; selectTab(a, d, c) }), c.addEventListener("keydown", c => { if (c.ctrlKey || c.metaKey || c.shiftKey || c.altKey) return; let b = f.indexOf(e); switch (c.which) { case 37: --b; break; case 39: ++b; break; case 36: b = 0; break; case 35: b = f.length - 1; break; default: return }b >= f.length ? b = 0 : b < 0 && (b = f.length - 1), selectTab(a, d, f[b]), c.preventDefault() }) } document.addEventListener("DOMContentLoaded", () => { makeTabs() })